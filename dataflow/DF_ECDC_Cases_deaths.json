{
	"name": "DF_ECDC_Cases_deaths",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "source"
				},
				{
					"dataset": {
						"referenceName": "DS_Lookup_country_ADLS",
						"type": "DatasetReference"
					},
					"name": "Sourcelookuocountrcode"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filter"
				},
				{
					"name": "select1"
				},
				{
					"name": "pivot1"
				},
				{
					"name": "lookupcountrycode"
				},
				{
					"name": "selectforsink"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as string,",
				"          indicator as string,",
				"          daily_count as integer,",
				"          date as date,",
				"          rate_14_day as string,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Sourcelookuocountrcode",
				"source filter(continent == 'Europe' && not(isNull(country_code))) ~> filter",
				"filter select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          source,",
				"          daily_count,",
				"          each(match(name=='date'),",
				"               'reported'+$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          source,",
				"          reporteddate),",
				"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
				"     count = sum(daily_count),",
				"     columnNaming: '$V$N',",
				"     lateral: true) ~> pivot1",
				"pivot1, Sourcelookuocountrcode lookup(pivot1@country == Sourcelookuocountrcode@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupcountrycode",
				"lookupcountrycode select(mapColumn(",
				"          country = pivot1@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population = pivot1@population,",
				"          {confirmed casescount},",
				"          deathscount,",
				"          reporteddate,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectforsink"
			]
		}
	}
}